#!/bin/sh
@SHELLOPTIONS@
#
# This file is released under the terms of the Artistic License.
# Please see the file LICENSE, included in this package, for details.
#
# Copyright The DBT-7 Authors

# Relating to Clause 5.1.3, giving this script the benefit of the doubt that is
# is implemented correctly, other publication also show errors that do not
# preserve PK/FK relationship, so letting errors happen.

usage()
{
	cat << EOF
$(basename "${0}") is the Database Test 7 (DBT-7) Greenplum data maintenance script

Usage:
  $(basename "${0}") [OPTION]

Options:
  -i PATH          PATH to config file
  -n STREAM        STREAM number
  -o PATH          PATH to save results
  -U               run test as an unprivileged user"
  -V, --version    output version information, then exit
  -?, --help       show this help, then exit

@HOMEPAGE@
EOF
}

delete_method3()
{
	TABLE=${1}
	COL=${2}
	DATE1=${3}
	DATE2=${4}

	${PSQL} << __EOF__
${DBT7DMPREFIX}
DELETE FROM ${TABLE}
USING date_dim
WHERE d_date_sk = ${COL}
  AND d_date BETWEEN '${DATE1}' AND '${DATE2}'
__EOF__
}

load_table()
{
	TABLE=${1}

	${PSQL} << __EOF__
ALTER TABLE ${TABLE}
SET (autovacuum_enabled = false, toast.autovacuum_enabled = false);
__EOF__

	for I in $(seq 1 ${CPUS}); do
		FILENAME="${DS_DATA}/${STREAM}/${TABLE}_${I}_${CPUS}.dat"
		if [ ! -f "${FILENAME}" ]; then
			# Smaller scale factors may not generate as many data files as there
			# are available processors.
			continue
		fi
		if [ ${PRIVILEGED} -ne 1 ]; then
			COPYPREFIX="\\"
		${PSQL} << __EOF__ &
${COPYPREFIX}COPY ${TABLE} FROM '${FILENAME}' WITH (DELIMITER '|', NULL '');
__EOF__
		fi
	done

	wait

	${PSQL} << __EOF__
ALTER TABLE ${TABLE}
SET (autovacuum_enabled = true, toast.autovacuum_enabled = true);
__EOF__
}

CPUS=1
PSQL="psql -v ON_ERROR_STOP=1 -X -e -d ${DBT7DBNAME}"
PRIVILEGED=1

# Custom argument handling for hopefully most portability.
while [ "${#}" -gt 0 ]; do
	case "${1}" in
	(-i)
		shift
		INPUT_DIR="${1}"
		;;
	(-n)
		shift
		STREAM="${1}"
		;;
	(-o)
		shift
		OUTPUT_DIR="${1}"
		;;
	(-U)
		PRIVILEGED=0
		;;
	esac
	shift
done

if [ "${STREAM}" = "" ]; then
	echo "Error: Specify stream number with -n flag"
	usage
	exit 1
fi

if [ "${OUTPUT_DIR}" = "" ]; then
	echo "Error: Specify results directory with -o flag"
	usage
	exit 1
fi

if [ -z "${DBT7DBNAME}" ]; then
	echo "Error: DBT7DBNAME environment variable not defined"
	exit 1
fi

# Clause 5

# Determine number of processors for parallelism.
if [ -f "/proc/stat" ]; then
	CPUS=$(nproc)
	echo "detected ${CPUS} processors for parallel data generation and loading"
fi

for T in s_purchase_lineitem s_purchase s_catalog_order s_web_order \
		s_catalog_order_lineitem s_web_order_lineitem s_store_returns \
		s_catalog_returns s_web_returns s_inventory; do
	${PSQL} -c "TRUNCATE ${T};"
	load_table ${T}
done

#
# Data Maintenance Function 11 Clause 5.3.11.12
#

while IFS= read -r LINE; do
	DATE1=$(echo "${LINE}" | cut -d "|" -f 1)
	DATE2=$(echo "${LINE}" | cut -d "|" -f 2)
	delete_method3 inventory inv_date_sk "${DATE1}" "${DATE2}"
done < "${DS_DATA}/${STREAM}/inventory_delete_${STREAM}.dat"

while IFS= read -r LINE; do
	DATE1=$(echo "${LINE}" | cut -d "|" -f 1)
	DATE2=$(echo "${LINE}" | cut -d "|" -f 2)

	#
	# Data Maintenance Function 10 Clause 5.3.11.11
	#

	delete_method3 web_sales ws_sold_date_sk "${DATE1}" "${DATE2}"
	delete_method3 web_returns wr_returned_date_sk "${DATE1}" "${DATE2}"

	#
	# Data Maintenance Function 9 Clause 5.3.11.9
	#

	delete_method3 store_sales ss_sold_date_sk "${DATE1}" "${DATE2}"
	delete_method3 store_returns sr_returned_date_sk "${DATE1}" "${DATE2}"

	#
	# Data Maintenance Function 8 Clause 5.3.11.10
	#

	delete_method3 catalog_sales cs_sold_date_sk "${DATE1}" "${DATE2}"
	delete_method3 catalog_returns cr_returned_date_sk "${DATE1}" "${DATE2}"
done < "${DS_DATA}/${STREAM}/delete_${STREAM}.dat"

#
# Data Maintenance Function 7 Clause 5.3.11.3
#

${PSQL} << __EOF__
${DBT7DMPREFIX}
INSERT INTO web_sales
SELECT d1.d_date_sk ws_sold_date_sk,
       t_time_sk ws_sold_time_sk,
       d2.d_date_sk ws_ship_date_sk,
       i_item_sk ws_item_sk,
       c1.c_customer_sk ws_bill_customer_sk,
       c1.c_current_cdemo_sk ws_bill_cdemo_sk,
       c1.c_current_hdemo_sk ws_bill_hdemo_sk,
       c1.c_current_addr_sk ws_bill_addr_sk,
       c2.c_customer_sk ws_ship_customer_sk,
       c2.c_current_cdemo_sk ws_ship_cdemo_sk,
       c2.c_current_hdemo_sk ws_ship_hdemo_sk,
       c2.c_current_addr_sk ws_ship_addr_sk,
       wp_web_page_sk ws_web_page_sk,
       web_site_sk ws_web_site_sk,
       sm_ship_mode_sk ws_ship_mode_sk,
       w_warehouse_sk ws_warehouse_sk,
       p_promo_sk ws_promo_sk,
       word_order_id ws_order_number,
       wlin_quantity ws_quantity,
       i_wholesale_cost ws_wholesale_cost,
       i_current_price ws_list_price,
       wlin_sales_price ws_sales_price,
       (i_current_price-wlin_sales_price)*wlin_quantity ws_ext_discount_amt,
       wlin_sales_price * wlin_quantity ws_ext_sales_price,
       i_wholesale_cost * wlin_quantity ws_ext_wholesale_cost,
       i_current_price * wlin_quantity ws_ext_list_price,
       i_current_price * web_tax_percentage ws_ext_tax,
       wlin_coupon_amt ws_coupon_amt,
       wlin_ship_cost * wlin_quantity WS_EXT_SHIP_COST,
       (wlin_sales_price * wlin_quantity)-wlin_coupon_amt ws_net_paid,
       ((wlin_sales_price * wlin_quantity)-wlin_coupon_amt)*(1+web_tax_percentage) ws_net_paid_inc_tax,
       ((wlin_sales_price * wlin_quantity)-wlin_coupon_amt)-(wlin_quantity*i_wholesale_cost) WS_NET_PAID_INC_SHIP,
       (wlin_sales_price * wlin_quantity)-wlin_coupon_amt + (wlin_ship_cost * wlin_quantity)
       + i_current_price * web_tax_percentage WS_NET_PAID_INC_SHIP_TAX,
       ((wlin_sales_price * wlin_quantity)-wlin_coupon_amt)-(i_wholesale_cost * wlin_quantity) WS_NET_PROFIT
FROM s_web_order
LEFT OUTER JOIN date_dim d1 ON (cast(word_order_date as date) = d1.d_date)
LEFT OUTER JOIN time_dim ON (word_order_time = t_time)
LEFT OUTER JOIN customer c1 ON (word_bill_customer_id = c1.c_customer_id)
LEFT OUTER JOIN customer c2 ON (word_ship_customer_id = c2.c_customer_id)
LEFT OUTER JOIN web_site ON (word_web_site_id = web_site_id AND web_rec_end_date IS NULL)
LEFT OUTER JOIN ship_mode ON (word_ship_mode_id = sm_ship_mode_id)
JOIN s_web_order_lineitem ON (word_order_id = wlin_order_id)
LEFT OUTER JOIN date_dim d2 ON (cast(wlin_ship_date as date) = d2.d_date)
LEFT OUTER JOIN item ON (wlin_item_id = i_item_id AND i_rec_end_date IS NULL)
LEFT OUTER JOIN web_page ON (wlin_web_page_id = wp_web_page_id AND wp_rec_end_date IS NULL)
LEFT OUTER JOIN warehouse ON (wlin_warehouse_id = w_warehouse_id)
LEFT OUTER JOIN promotion ON (wlin_promotion_id = p_promo_id)
;
__EOF__

#
# Data Maintenance Function 6 Clause 5.3.11.4
#

${PSQL} << __EOF__
${DBT7DMPREFIX}
INSERT INTO web_returns
SELECT d_date_sk wr_return_date_sk
      ,t_time_sk wr_return_time_sk
      ,i_item_sk wr_item_sk
      ,c1.c_customer_sk wr_refunded_customer_sk
      ,c1.c_current_cdemo_sk wr_refunded_cdemo_sk
      ,c1.c_current_hdemo_sk wr_refunded_hdemo_sk
      ,c1.c_current_addr_sk wr_refunded_addr_sk
      ,c2.c_customer_sk wr_returning_customer_sk
      ,c2.c_current_cdemo_sk wr_returning_cdemo_sk
      ,c2.c_current_hdemo_sk wr_returning_hdemo_sk
      ,c2.c_current_addr_sk wr_returing_addr_sk
      ,wp_web_page_sk wr_web_page_sk
      ,r_reason_sk wr_reason_sk
      ,wret_order_id wr_order_number
      ,wret_return_qty wr_return_quantity
      ,wret_return_amt wr_return_amt
      ,wret_return_tax wr_return_tax
      ,wret_return_amt + wret_return_tax AS wr_return_amt_inc_tax
      ,wret_return_fee wr_fee
      ,wret_return_ship_cost wr_return_ship_cost
      ,wret_refunded_cash wr_refunded_cash
      ,wret_reversed_charge wr_reversed_charge
      ,wret_account_credit wr_account_credit
      ,wret_return_amt+wret_return_tax+wret_return_fee
       -wret_refunded_cash-wret_reversed_charge-wret_account_credit wr_net_loss
FROM s_web_returns LEFT OUTER JOIN date_dim ON (cast(wret_return_date as date) = d_date)
LEFT OUTER JOIN time_dim ON ((CAST(SUBSTR(wret_return_time,1,2) AS integer)*3600
+CAST(SUBSTR(wret_return_time,4,2) AS integer)*60+CAST(SUBSTR(wret_return_time,7,2) AS integer))=t_time)
LEFT OUTER JOIN item ON (wret_item_id = i_item_id)
LEFT OUTER JOIN customer c1 ON (wret_return_customer_id = c1.c_customer_id)
LEFT OUTER JOIN customer c2 ON (wret_refund_customer_id = c2.c_customer_id)
LEFT OUTER JOIN reason ON (wret_reason_id = r_reason_id)
LEFT OUTER JOIN web_page ON (wret_web_page_id = WP_WEB_PAGE_id)
WHERE i_rec_end_date IS NULL AND wp_rec_end_date IS NULL
;
__EOF__

#
# Data Maintenance Function 5 Clause 5.3.11.1
#

${PSQL} << __EOF__
${DBT7DMPREFIX}
INSERT INTO store_sales
SELECT d_date_sk ss_sold_date_sk,
       t_time_sk ss_sold_time_sk,
       i_item_sk ss_item_sk,
       c_customer_sk ss_customer_sk,
       c_current_cdemo_sk ss_cdemo_sk,
       c_current_hdemo_sk ss_hdemo_sk,
       c_current_addr_sk ss_addr_sk,
       s_store_sk ss_store_sk,
       p_promo_sk ss_promo_sk,
       purc_purchase_id ss_ticket_number,
       plin_quantity ss_quantity,
       i_wholesale_cost ss_wholesale_cost,
       i_current_price ss_list_price,
       plin_sale_price ss_sales_price,
       (i_current_price-plin_sale_price)*plin_quantity ss_ext_discount_amt,
       plin_sale_price * plin_quantity ss_ext_sales_price,
       i_wholesale_cost * plin_quantity ss_ext_wholesale_cost,
       i_current_price * plin_quantity ss_ext_list_price,
       i_current_price * s_tax_percentage ss_ext_tax,
       plin_coupon_amt ss_coupon_amt,
       (plin_sale_price * plin_quantity)-plin_coupon_amt ss_net_paid,
       ((plin_sale_price * plin_quantity)-plin_coupon_amt)*(1+s_tax_percentage) ss_net_paid_inc_tax,
       ((plin_sale_price * plin_quantity)-plin_coupon_amt)-(plin_quantity*i_wholesale_cost) ss_net_profit
FROM   s_purchase
LEFT OUTER JOIN customer ON (purc_customer_id = c_customer_id)
LEFT OUTER JOIN store ON (purc_store_id = s_store_id)
LEFT OUTER JOIN date_dim ON (cast(purc_purchase_date as date) = d_date)
LEFT OUTER JOIN time_dim ON (PURC_PURCHASE_TIME = t_time)
JOIN s_purchase_lineitem ON (purc_purchase_id = plin_purchase_id)
LEFT OUTER JOIN promotion ON plin_promotion_id = p_promo_id
LEFT OUTER JOIN item ON plin_item_id = i_item_id
WHERE purc_purchase_id = plin_purchase_id
    AND i_rec_end_date is NULL
    AND s_rec_end_date is NULL
;
__EOF__

#
# Data Maintenance Function 4 Clause 5.3.11.2
#

${PSQL} << __EOF__
${DBT7DMPREFIX}
INSERT INTO store_returns
SELECT d_date_sk sr_returned_date_sk
      ,t_time_sk sr_return_time_sk
      ,i_item_sk sr_item_sk
      ,c_customer_sk sr_customer_sk
      ,c_current_cdemo_sk sr_cdemo_sk
      ,c_current_hdemo_sk sr_hdemo_sk
      ,c_current_addr_sk sr_addr_sk
      ,s_store_sk sr_store_sk
      ,r_reason_sk sr_reason_sk
      ,cast(sret_ticket_number as bigint) sr_ticket_number
      ,sret_return_qty sr_return_quantity
      ,sret_return_amount sr_return_amt
      ,sret_return_tax sr_return_tax
      ,sret_return_amount + sret_return_tax sr_return_amt_inc_tax
      ,sret_return_fee sr_fee
      ,sret_return_ship_cost sr_return_ship_cost
      ,sret_refunded_cash sr_refunded_cash
      ,sret_reversed_charge sr_reversed_charge
      ,sret_store_credit sr_store_credit
      ,sret_return_amount+sret_return_tax+sret_return_fee
       -sret_refunded_cash-sret_reversed_charge-sret_store_credit sr_net_loss
FROM s_store_returns
LEFT OUTER JOIN date_dim
  ON (cast(sret_return_date as date) = d_date)
LEFT OUTER JOIN time_dim
  ON (( cast(substr(sret_return_time,1,2) AS integer)*3600
       +cast(substr(sret_return_time,4,2) AS integer)*60
       +cast(substr(sret_return_time,7,2) AS integer)) = t_time)
LEFT OUTER JOIN item ON (sret_item_id = i_item_id)
LEFT OUTER JOIN customer ON (sret_customer_id = c_customer_id)
LEFT OUTER JOIN store ON (sret_store_id = s_store_id)
LEFT OUTER JOIN reason ON (sret_reason_id = r_reason_id)
WHERE i_rec_end_date IS NULL
  AND s_rec_end_date IS NULL
;
__EOF__

#
# Data Maintenance Function 3 Clause 5.3.11.7
#

${PSQL} << __EOF__
${DBT7DMPREFIX}
INSERT INTO inventory
SELECT d_date_sk inv_date_sk,
       i_item_sk inv_item_sk,
       w_warehouse_sk inv_warehouse_sk,
       invn_qty_on_hand inv_quantity_on_hand
FROM s_inventory
LEFT OUTER JOIN warehouse ON (invn_warehouse_id=w_warehouse_id)
LEFT OUTER JOIN item ON (invn_item_id=i_item_id AND i_rec_end_date IS NULL)
LEFT OUTER JOIN date_dim ON (d_date=cast(invn_date as date))
;
__EOF__

#
# Data Maintenance Function 2 Clause 5.3.11.5
#

${PSQL} << __EOF__
${DBT7DMPREFIX}
SELECT d1.d_date_sk cs_sold_date_sk
      ,t_time_sk cs_sold_time_sk
      ,d2.d_date_sk cs_ship_date_sk
      ,c1.c_customer_sk cs_bill_customer_sk
      ,c1.c_current_cdemo_sk cs_bill_cdemo_sk
      ,c1.c_current_hdemo_sk cs_bill_hdemo_sk
      ,c1.c_current_addr_sk cs_bill_addr_sk
      ,c2.c_customer_sk cs_ship_customer_sk
      ,c2.c_current_cdemo_sk cs_ship_cdemo_sk
      ,c2.c_current_hdemo_sk cs_ship_hdemo_sk
      ,c2.c_current_addr_sk cs_ship_addr_sk
      ,cc_call_center_sk cs_call_center_sk
      ,cp_catalog_page_sk cs_catalog_page_sk
      ,sm_ship_mode_sk cs_ship_mode_sk
      ,w_warehouse_sk cs_warehouse_sk
      ,i_item_sk cs_item_sk
      ,p_promo_sk cs_promo_sk
      ,cord_order_id cs_order_number
      ,clin_quantity cs_quantity
      ,i_wholesale_cost cs_wholesale_cost
      ,i_current_price cs_list_price
      ,clin_sales_price cs_sales_price
      ,(i_current_price-clin_sales_price)*clin_quantity cs_ext_discount_amt
      ,clin_sales_price * clin_quantity cs_ext_sales_price
      ,i_wholesale_cost * clin_quantity cs_ext_wholesale_cost
      ,i_current_price * clin_quantity CS_EXT_LIST_PRICE
      ,i_current_price * cc_tax_percentage CS_EXT_TAX
      ,clin_coupon_amt cs_coupon_amt
      ,clin_ship_cost * clin_quantity CS_EXT_SHIP_COST
      ,(clin_sales_price * clin_quantity)-clin_coupon_amt cs_net_paid
      ,((clin_sales_price * clin_quantity)-clin_coupon_amt)*(1+cc_tax_percentage) cs_net_paid_inc_tax
      ,(clin_sales_price * clin_quantity)-clin_coupon_amt + (clin_ship_cost * clin_quantity) CS_NET_PAID_INC_SHIP
      ,(clin_sales_price * clin_quantity)-clin_coupon_amt + (clin_ship_cost * clin_quantity)
       + i_current_price * cc_tax_percentage CS_NET_PAID_INC_SHIP_TAX
      ,((clin_sales_price * clin_quantity)-clin_coupon_amt)-(clin_quantity*i_wholesale_cost) cs_net_profit
FROM    s_catalog_order
LEFT OUTER JOIN date_dim d1 ON
  (cast(cord_order_date as date) = d1.d_date)
LEFT OUTER JOIN time_dim ON (cord_order_time = t_time)
LEFT OUTER JOIN customer c1 ON (cord_bill_customer_id = c1.c_customer_id)
LEFT OUTER JOIN customer c2 ON (cord_ship_customer_id = c2.c_customer_id)
LEFT OUTER JOIN call_center ON (cord_call_center_id = cc_call_center_id AND cc_rec_end_date IS NULL)
LEFT OUTER JOIN ship_mode ON (cord_ship_mode_id = sm_ship_mode_id)
JOIN s_catalog_order_lineitem ON (cord_order_id = clin_order_id)
LEFT OUTER JOIN date_dim d2 ON
  (cast(clin_ship_date as date) = d2.d_date)
LEFT OUTER JOIN catalog_page ON
  (clin_catalog_page_number = cp_catalog_page_number and clin_catalog_number = cp_catalog_number)
LEFT OUTER JOIN warehouse ON (clin_warehouse_id = w_warehouse_id)
LEFT OUTER JOIN item ON (clin_item_id = i_item_id AND i_rec_end_date IS NULL)
LEFT OUTER JOIN promotion ON (clin_promotion_id = p_promo_id);
__EOF__

#
# Data Maintenance Function 2 Clause 5.3.11.5
#

${PSQL} << __EOF__
${DBT7DMPREFIX}
INSERT INTO catalog_sales
SELECT d1.d_date_sk cs_sold_date_sk
      ,t_time_sk cs_sold_time_sk
      ,d2.d_date_sk cs_ship_date_sk
      ,c1.c_customer_sk cs_bill_customer_sk
      ,c1.c_current_cdemo_sk cs_bill_cdemo_sk
      ,c1.c_current_hdemo_sk cs_bill_hdemo_sk
      ,c1.c_current_addr_sk cs_bill_addr_sk
      ,c2.c_customer_sk cs_ship_customer_sk
      ,c2.c_current_cdemo_sk cs_ship_cdemo_sk
      ,c2.c_current_hdemo_sk cs_ship_hdemo_sk
      ,c2.c_current_addr_sk cs_ship_addr_sk
      ,cc_call_center_sk cs_call_center_sk
      ,cp_catalog_page_sk cs_catalog_page_sk
      ,sm_ship_mode_sk cs_ship_mode_sk
      ,w_warehouse_sk cs_warehouse_sk
      ,i_item_sk cs_item_sk
      ,p_promo_sk cs_promo_sk
      ,cord_order_id cs_order_number
      ,clin_quantity cs_quantity
      ,i_wholesale_cost cs_wholesale_cost
      ,i_current_price cs_list_price
      ,clin_sales_price cs_sales_price
      ,(i_current_price-clin_sales_price)*clin_quantity cs_ext_discount_amt
      ,clin_sales_price * clin_quantity cs_ext_sales_price
      ,i_wholesale_cost * clin_quantity cs_ext_wholesale_cost
      ,i_current_price * clin_quantity CS_EXT_LIST_PRICE
      ,i_current_price * cc_tax_percentage CS_EXT_TAX
      ,clin_coupon_amt cs_coupon_amt
      ,clin_ship_cost * clin_quantity CS_EXT_SHIP_COST
      ,(clin_sales_price * clin_quantity)-clin_coupon_amt cs_net_paid
      ,((clin_sales_price * clin_quantity)-clin_coupon_amt)*(1+cc_tax_percentage) cs_net_paid_inc_tax
      ,(clin_sales_price * clin_quantity)-clin_coupon_amt + (clin_ship_cost * clin_quantity) CS_NET_PAID_INC_SHIP
      ,(clin_sales_price * clin_quantity)-clin_coupon_amt + (clin_ship_cost * clin_quantity)
       + i_current_price * cc_tax_percentage CS_NET_PAID_INC_SHIP_TAX
      ,((clin_sales_price * clin_quantity)-clin_coupon_amt)-(clin_quantity*i_wholesale_cost) cs_net_profit
FROM    s_catalog_order
LEFT OUTER JOIN date_dim d1 ON
  (cast(cord_order_date as date) = d1.d_date)
LEFT OUTER JOIN time_dim ON (cord_order_time = t_time)
LEFT OUTER JOIN customer c1 ON (cord_bill_customer_id = c1.c_customer_id)
LEFT OUTER JOIN customer c2 ON (cord_ship_customer_id = c2.c_customer_id)
LEFT OUTER JOIN call_center ON (cord_call_center_id = cc_call_center_id AND cc_rec_end_date IS NULL)
LEFT OUTER JOIN ship_mode ON (cord_ship_mode_id = sm_ship_mode_id)
JOIN s_catalog_order_lineitem ON (cord_order_id = clin_order_id)
LEFT OUTER JOIN date_dim d2 ON
  (cast(clin_ship_date as date) = d2.d_date)
LEFT OUTER JOIN catalog_page ON
  (clin_catalog_page_number = cp_catalog_page_number and clin_catalog_number = cp_catalog_number)
LEFT OUTER JOIN warehouse ON (clin_warehouse_id = w_warehouse_id)
LEFT OUTER JOIN item ON (clin_item_id = i_item_id AND i_rec_end_date IS NULL)
LEFT OUTER JOIN promotion ON (clin_promotion_id = p_promo_id)
;
__EOF__

#
# Data Maintenance Function 1 Clause 5.3.11.6
#

${PSQL} << __EOF__
${DBT7DMPREFIX}
INSERT INTO catalog_returns
SELECT d_date_sk cr_returned_date_sk
      ,t_time_sk cr_returned_time_sk
      ,i_item_sk cr_item_sk
      ,c1.c_customer_sk cr_refunded_customer_sk
      ,c1.c_current_cdemo_sk cr_refunded_cdemo_sk
      ,c1.c_current_hdemo_sk cr_refunded_hdemo_sk
      ,c1.c_current_addr_sk cr_refunded_addr_sk
      ,c2.c_customer_sk cr_returning_customer_sk
      ,c2.c_current_cdemo_sk cr_returning_cdemo_sk
      ,c2.c_current_hdemo_sk cr_returning_hdemo_sk
      ,c2.c_current_addr_sk cr_returing_addr_sk
      ,cc_call_center_sk cr_call_center_sk
      ,cp_catalog_page_sk CR_CATALOG_PAGE_SK
      ,sm_ship_mode_sk CR_SHIP_MODE_SK
      ,w_warehouse_sk CR_WAREHOUSE_SK
      ,r_reason_sk cr_reason_sk
      ,cret_order_id cr_order_number
      ,cret_return_qty cr_return_quantity
      ,cret_return_amt cr_return_amt
      ,cret_return_tax cr_return_tax
      ,cret_return_amt + cret_return_tax AS cr_return_amt_inc_tax
      ,cret_return_fee cr_fee
      ,cret_return_ship_cost cr_return_ship_cost
      ,cret_refunded_cash cr_refunded_cash
      ,cret_reversed_charge cr_reversed_charge
      ,cret_merchant_credit cr_merchant_credit
      ,cret_return_amt+cret_return_tax+cret_return_fee
         -cret_refunded_cash-cret_reversed_charge-cret_merchant_credit cr_net_loss
FROM s_catalog_returns
LEFT OUTER JOIN date_dim
  ON (cast(cret_return_date as date) = d_date)
LEFT OUTER JOIN time_dim ON
  ((CAST(substr(cret_return_time,1,2) AS integer)*3600
   +CAST(substr(cret_return_time,4,2) AS integer)*60
   +CAST(substr(cret_return_time,7,2) AS integer)) = t_time)
LEFT OUTER JOIN item ON (cret_item_id = i_item_id)
LEFT OUTER JOIN customer c1 ON (cret_return_customer_id = c1.c_customer_id)
LEFT OUTER JOIN customer c2 ON (cret_refund_customer_id = c2.c_customer_id)
LEFT OUTER JOIN reason ON (cret_reason_id = r_reason_id)
LEFT OUTER JOIN call_center ON (cret_call_center_id = cc_call_center_id)
LEFT OUTER JOIN catalog_page ON (cret_catalog_page_id = cp_catalog_page_id)
LEFT OUTER JOIN ship_mode ON (cret_shipmode_id = sm_ship_mode_id)
LEFT OUTER JOIN warehouse ON (cret_warehouse_id = w_warehouse_id)
WHERE i_rec_end_date IS NULL AND cc_rec_end_date IS NULL
;
__EOF__
