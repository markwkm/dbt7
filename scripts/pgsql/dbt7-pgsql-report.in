#!/bin/sh
@SHELLOPTIONS@
#
# This file is released under the terms of the Artistic License.
# Please see the file LICENSE, included in this package, for details.
#
# Copyright The DBT-7 Authors

usage()
{
	cat << EOF
$(basename "${0}") is the Database Test 7 (DBT-7) PostgreSQL report generator

Usage:
  $(basename "${0}") [OPTION] DIRECTORY

Options:
  -i PATH          results directory
  -V, --version    output version information, then exit
  -?, --help       show this help, then exit

DIRECTORY is the path to DBT-7 results.

@HOMEPAGE@
EOF
}

create_stat_page()
{
	TAG=$1

	OUTDIR="${PIDSTATDIR}/report/${TAG}"
	mkdir -p $OUTDIR

	cat > ${OUTDIR}/index.rst << __EOF__
================================================================================
Database Test 7 pidstat $TAG Charts
================================================================================

$(show_images $TAG)
__EOF__
}

links_index_metrics()
{
	NAME=$1

	INDEXMETRICS=$( (cd "${INDIR}/${NAME}/dbstat/index" && \
			find . -name "*.png") | sed -e "s/.\/pgsql-*.*.*-//" | \
			sed -e "s/.png$//" | sort | uniq)

	for METRIC in $INDEXMETRICS; do
		printf "\`%s <%s/dbstat/index-stat/i_%s/>\`__ " \
				"${METRIC}" "${NAME}" "${METRIC}"
	done
}

links_indexes()
{
	NAME=$1

	INDEXFILE="${INDIR}/${NAME}/dbstat/index-list.txt"
	if [ -f "${INDEXFILE}" ]; then
		grep ^public\. "${INDEXFILE}" | \
				grep -v "\.pg_catalog\." | while IFS= read -r INDEX; do
			printf "\`%s <%s/dbstat/index/%s/>\`__ " "${INDEX}" "${NAME}" \
					"${INDEX}"
		done
	fi
}

links_table_metrics()
{
	NAME=$1

	TABLEMETRICS=$( (cd "${INDIR}/${NAME}/dbstat/table" && \
			find . -name "*.png") | sed -e "s/^.\/pgsql-*.*-//" | \
			sed -e "s/.png$//" | sort | uniq)

	for METRIC in $TABLEMETRICS; do
		printf "\`%s <%s/dbstat/table-stat/t_%s/>\`__ " \
				"${METRIC}" "${NAME}" "${METRIC}"
	done
}

links_tables()
{
	NAME=$1

	TABLEFILE="${INDIR}/${NAME}/dbstat/table-list.txt"
	if [ -f "${TABLEFILE}" ]; then
		grep ^public\. "${TABLEFILE}" | \
				while IFS= read -r TABLE; do
			printf "\`%s <%s/dbstat/table/%s/>\`__ " \
					"${TABLE}" "${NAME}" "${TABLE}"
		done
	fi
}

list_processes()
{
	for T in autovacuum bgwriter checkpointer logger logical statscollector \
			walwriter; do
		create_stat_page $T
		printf " \`%s <%s/sysstat/report/%s/>\`__" "${T}" \
				"${DIRECTORY}" "${T}"
	done
	echo ""
}

summarize()
{
	TITLE=$1
	DIRECTORY=$2

	PIDSTATDIR="${INDIR}/${DIRECTORY}/sysstat"

	DBSTATDIR="${INDIR}/${DIRECTORY}/dbstat"
	if [ ! -d "${DBSTATDIR}" ]; then
		return
	fi

	# Create additional HTML pages for the database charts.

	if which dbt-pgsql-generate-db-report > /dev/null 2>&1; then
		dbt-pgsql-generate-db-report -t "Database Test 7" -d dbt7 \
				-i "${DBSTATDIR}"
	fi
	if which dbt-pgsql-generate-table-report > /dev/null 2>&1; then
		dbt-pgsql-generate-table-report -t "Database Test 7" \
				-i "${DBSTATDIR}/table-list.txt"
	fi
	if which dbt-pgsql-generate-index-report > /dev/null 2>&1; then
		dbt-pgsql-generate-index-report -t "Database Test 7" \
				-i "${DBSTATDIR}/index-list.txt"
	fi

	cat << __EOF__
$TITLE
--------------------------------------------------------------------------------

* \`Database Settings <${DIRECTORY}/dbstat/params.csv>\`__
* Per Process Statistics: $(list_processes)

.. list-table::

   * - Database Stats Charts
     - \`dbt7 <${DIRECTORY}/dbstat/db/dbt7>\`__
   * - Database Table Stats Charts:
     - $(links_tables ${DIRECTORY})
   * - Database Index Stats Charts:
     - $(links_indexes ${DIRECTORY})
   * - Database Tables by Metric:
     - $(links_table_metrics ${DIRECTORY})
   * - Database Indexs by Metric:
     - $(links_index_metrics ${DIRECTORY})

__EOF__
}

show_images()
{
	TAG=$1

	TAGPIDS=$(grep "${TAG}" "${PIDSTATDIR}/${PIDPREFIX}-index.txt" | \
			cut -d " " -f 1)

	for P in ${TAGPIDS}; do
		find "${PIDSTATDIR}" -type f -name "${PIDPREFIX}-${P}-*.png" | \
				sort | while IFS= read -r CHART; do
			BCHART="$(basename "${CHART}")"
			echo ".. image:: ../../pidstat/plots/${BCHART}"
			echo "   :target: ../../pidstat/plots/${BCHART}"
			echo "   :width: 100%"
			echo ""
		done
	done
}

# Custom argument handling for hopefully most portability.
while [ "${#}" -gt 0 ] ; do
	case "${1}" in
	(-i)
		shift
		INDIR="${1}"
		;;
	(-V | --version)
		echo "$(basename "${0}") (Database Test 7) v@PROJECT_VERSION@"
		;;
	(-\? | --help)
		usage
		exit 0
		;;
	(--* | -*)
		echo "$(basename "${0}"): invalid option -- '${1}'"
		echo "try \"$(basename "${0}") --help\" for more information."
		exit 1
		;;
	(*)
		break
		;;
	esac
	shift
done

if [ "x${INDIR}" = "x" ]; then
	echo "Specify dbt7 results directory with -i"
	exit 1
fi

# Set the spar vs pidstat image file name prefix here.
PIDPREFIX="spar"
# shellcheck disable=SC2044
for _ in $(find "${INDIR}" -type f -name pidstat.txt 2> /dev/null);
do
	PIDPREFIX="pidstat"
done

for TEST in load power throughput; do
	DBDIR="${INDIR}/${TEST}/dbstat"
	if [ -d "${DBDIR}" ]; then
		ts plot-pgsql -d dbt7 -i "${DBDIR}" &
	fi
done
wait

cat << __EOF__
PostgreSQL Report
=================

$(summarize "Load Test" load)

$(summarize "Power Test" power)

$(summarize "Throughput Test" throughput)
__EOF__
