#!/bin/sh
@SHELLOPTIONS@
#
# This file is released under the terms of the Artistic License.
# Please see the file LICENSE, included in this package, for details.
#
# Copyright The DBT-7 Authors

usage()
{
	cat << EOF
$(basename "${0}") is the Database Test 7 (DBT-7) PostgreSQL data loader

Usage:
  $(basename "${0}") [OPTION]

Options:
  -s SCALE_FACTOR, --scale-factor=SCALE_FACTOR
                   set the scale factor
  --parallel CHUNKS
                   parallelize the load into CHUNKS parts
  --tablespaces    create and use tablespaces
  -U               run test as an unprivileged user
  -?, --help       show this help, then exit
EOF
}

CHUNKS=""
CPUS=1
PSQL="psql -v ON_ERROR_STOP=1 -X -d $DBT7DBNAME"
PRIVILEGED=1

if [ "x$DSTOOLS" = "x" ]; then
	echo "DSTOOLS env var is not set"
	exit 1
fi
if [ ! -d $DSTOOLS ]; then
	echo "DSTOOLS dir does not exist: $DSTOOLS"
	exit 2
fi

load_table()
{
	TABLE=$1

	$PSQL << __EOF__
ALTER TABLE $TABLE
SET (autovacuum_enabled = false, toast.autovacuum_enabled = false);
__EOF__

	for I in `seq 1 $CPUS`; do
		if [ "${CPUS}" -eq 1 ]; then
			FILENAME="${DS_DATA}/${TABLE}.dat"
		else
			FILENAME="${DS_DATA}/${TABLE}_${I}_${CPUS}.dat"
		fi
		if [ ! -f "$FILENAME" ]; then
			# Smaller scale factors may not generate as many data files as there
			# are available processors.
			continue
		fi
		if [ $PRIVILEGED -ne 1 ]; then
			COPYPREFIX="\\"
		fi
		$PSQL << __EOF__ &
${COPYPREFIX}COPY $TABLE FROM '$FILENAME' WITH (DELIMITER '|', NULL '');
__EOF__
	done

	wait

	$PSQL << __EOF__
ALTER TABLE $TABLE
SET (autovacuum_enabled = true, toast.autovacuum_enabled = true);
__EOF__
}

TABLESPACES_ARG=""

# Custom argument handling for hopefully most portability.
while [ "${#}" -gt 0 ] ; do
	case "${1}" in
	(-s | --scale-factor)
		shift
		SCALE="${1}"
		;;
	(--parallel)
		shift
		CHUNKS="${1}"
		;;
	(--parallel=?*)
		CHUNKS="${1#*--parallel=}"
		;;
	(--scale-factor=?*)
		SCALE="${1#*--scale-factor=}"
		;;
	(--tablespaces)
		TABLESPACES_ARG="--tablespaces"
		;;
	(-U)
		PRIVILEGED=0
		;;
	(-\? | --help)
		usage
		exit 0
		;;
	(--* | -*)
		echo "$(basename "${0}"): invalid option -- '${1}'"
		echo "try \"$(basename "${0}") --help\" for more information."
		exit 1
		;;
	(*)
		break
		;;
	esac
	shift
done

if [ -z $DBT7DBNAME ]; then
	echo "Error: DBT7DBNAME environment variable not defined"
	exit 1
fi

if [ "x$SCALE" = "x" ]; then
	echo "SCALE must be set with -s"
	exit 3
fi

if [ "${CHUNKS}" = "" ]; then
	# Determine number of processors for parallelism.
	if command -v nproc > /dev/null 2>&1; then
		CPUS=$(nproc)
		echo "detected ${CPUS} logical processors for parallel loading"
	else
		echo "could not detect number of processors, parallelizing for ${CPUS}"
	fi
else
	CPUS=${CHUNKS}
fi

dbt7-pgsql-time-statistics -s -n TABLE
for T in store_sales store_returns catalog_sales catalog_returns web_sales \
		web_returns inventory store call_center catalog_page web_site web_page \
		warehouse customer customer_address customer_demographics date_dim \
		household_demographics item income_band promotion reason ship_mode \
		time_dim; do
	load_table $T
done
dbt7-pgsql-time-statistics -e -n TABLE
dbt7-pgsql-time-statistics -s -n INDEX
eval "dbt7-pgsql-create-indexes ${TABLESPACES_ARG}"
dbt7-pgsql-time-statistics -e -n INDEX

dbt7-pgsql-time-statistics -s -n ANALYZE
${PSQL} << __EOF__
ANALYZE VERBOSE;
__EOF__
dbt7-pgsql-time-statistics -e -n ANALYZE
