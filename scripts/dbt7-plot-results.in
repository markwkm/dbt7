#!/bin/sh
@SHELLOPTIONS@
#
# This file is released under the terms of the Artistic License.
# Please see the file LICENSE, included in this package, for details.
#
# Copyright The DBT-7 Authors

usage()
{
	echo "`basename $0` is the DBT-7 Power Test query plotter"
	echo ""
	echo "Usage:"
	echo "  `basename $0` [OPTIONS]"
	echo ""
	echo "General options:"
	echo "  -i CSV     power test time statistics file"
	echo "  -o PATH    output directory"
}

cleanup()
{
	if [ ! "${DATAFILE}" = "" ]; then
		rm -f "${DATAFILE}"
	fi
	if [ ! "${TMPDIR}" = "" ]; then
		rm -rf "${TMPDIR}"
	fi
}

DATAFILE=""
TMPDIR=""
trap cleanup INT QUIT ABRT TERM

OUTDIR="."
while getopts "hi:o:" OPT; do
	case $OPT in
	h)
		usage
		exit 0
		;;
	i)
		INFILE=$OPTARG
		;;
	o)
		OUTDIR=$OPTARG
		;;
	\?)
		exit 1
		;;
	esac
done

# Queries are numbered by execution order, not by the actual query number.
# Construct a new datafile to plot.

TMPDIR=$(mktemp -d)
DATAFILE=$(mktemp)
DBFILE="${TMPDIR}/dbt7.db"

sqlite3 "${DBFILE}" << EOF
CREATE TABLE qtime(
    stream INTEGER
  , query INTEGER
  , template TEXT
  , s_time TEXT
  , e_time TEXT
  , elapsed_time TEXT
  , diff_time REAL
);
.mode csv
.import ${INFILE} qtime
EOF

for Q in $(seq 1 99); do
	DIFFTIME="$(sqlite3 "${DBFILE}" <<- EOF
		SELECT diff_time
		FROM qtime
		WHERE template REGEXP '\D${Q}\D'
		  AND stream = 0
		;
	EOF
	)"
	echo "Q${Q} ${DIFFTIME}" >> "${DATAFILE}"
done

gnuplot << EOF
set terminal pngcairo size 1600,1000
set title "Query Execution Time"
set grid
set output "${OUTDIR}/power.png"
set xtics rotate
set ylabel "Seconds"
set style data histogram
set style fill solid
plot '${DATAFILE}' using 2:xtic(1) title 'Power'
EOF

cleanup
